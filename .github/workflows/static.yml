# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Update index.html
        run: |
          python3 -c '
          import os
          import json
          from string import Template
          tea_files = [f for f in os.listdir(".") if f.endswith(".json") and not f.endswith(".schema.json")]
          html_template = """<!doctype html>
          <html lang="en">
          <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>Tea DB</title>
          <meta name="description" content="A database of tea.">
          <meta property="og:title" content="Tea DB">
          <meta property="og:type" content="website">
          <meta property="og:url" content="https://gavrielrh.github.io/tea-db">
          <meta property="og:description" content="A database of tea.">
          <meta property="og:image" content="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Tea_in_different_grade_of_fermentation.jpg/1920px-Tea_in_different_grade_of_fermentation.jpg">
          <style>
          * {
          box-sizing: border-box;
          margin: 0;
          padding: 0;
          }
          html {
          overflow-y: scroll;
          height: 100%;
          font: 100%/1.5 sans-serif;
          word-wrap: break-word;
          margin: 0 auto;
          padding: 1.5em;
          }
          @media (min-width: 768px) {
          html {
          font-size: 125%;
          max-width: 42em;
          }}
          h1, h2, h3, h4 {
          margin: 2.5rem 0 1.5rem 0;
          line-height: 1.25;
          color: #333;
          }
          a {
          color: #fa6432;
          text-decoration: none;
          }
          a:hover, a:focus, a:active {
          text-decoration: underline;
          }
          ol, ul {
          list-style-type: none;
          }
          </style>
          </head>
          <body>
          <div>Schema: <a href="tea.schema.json">tea.schema.json</a></div>
          <div>
          <h1>Tea List</h1>
          <ul id="tea-list">
          $tea_list</ul>
          </div>
          </body>
          </html>"""
          li_template = "<li><a href=\"$link\">$name</a></li>"
          li_body = ""
          with open("index.html", "w") as f:
            for tea_file in tea_files:
              with open(tea_file, "r") as jf:
                data = json.load(jf)
                name = data.get("name", "")
                if name:
                  li = Template(li_template).substitute(link=tea_file, name=name)
                  li_body += f"{li}\n"
            f.write(Template(html_template).substitute(tea_list=li_body))
          '
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
